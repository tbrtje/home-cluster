apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: zero-ui
  name: zero-ui
  namespace: networking
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: zero-ui
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: zero-ui
    spec:
      containers:
        - image: dec0dos/zerotier-controller:latest
          name: zu-controller
          ports:
            - containerPort: 9993
              protocol: UDP
            - containerPort: 9993
          volumeMounts:
            - mountPath: /var/lib/zerotier-one
              name: controller-data
        - env:
            - name: ZU_CONTROLLER_ENDPOINT
              value: http://localhost:9993/
            - name: ZU_DEFAULT_PASSWORD
              value: zero-ui
            - name: ZU_DEFAULT_USERNAME
              value: admin
            - name: ZU_SECURE_HEADERS
              value: "true"
          image: dec0dos/zero-ui:latest
          name: zu-main
          ports:
            - containerPort: 4000
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/zerotier-one
              name: controller-data
            - mountPath: /app/backend/data
              name: zero-ui-data
      restartPolicy: Always
      volumes:
        - name: controller-data
          persistentVolumeClaim:
            claimName: controller-data
        - name: zero-ui-data
          persistentVolumeClaim:
            claimName: zero-ui-data
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: zero-ui
  name: zero-ui
  namespace: networking
spec:
  ports:
    - name: "http"
      port: 4000
      targetPort: 4000
  selector:
    io.kompose.service: zero-ui
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: zero-ui-data
  name: zero-ui-data
  namespace: networking
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: controller-data
  name: controller-data
  namespace: networking
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: zero-ui
  namespace: networking
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    hajimari.io/enable: "true"
    hajimari.io/icon: weather-sunset
    traefik.ingress.kubernetes.io/router.entrypoints: websecure

spec:
  rules:
    - host: zerotier.${SECRET_DOMAIN}
      http:
        paths:
          - backend:
              service:
                name: zero-ui
                port:
                  name: "http"
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - zerotier.${SECRET_DOMAIN}
      secretName: zerotier-dashboard-tls