apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: digikam
    app.kubernetes.io/name: digikam
  name: digikam
  namespace: private
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: digikam
      app.kubernetes.io/name: digikam
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: digikam
        app.kubernetes.io/name: digikam
    spec:
      containers:
        - env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "Europe/Berlin"
          image: lscr.io/linuxserver/digikam:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 2
          name: digikam
          ports:
            - containerPort: 3000
              name: main
              protocol: TCP
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 2
          startupProbe:
            failureThreshold: 60
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 2
          volumeMounts:
            - mountPath: /config
              name: config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: default
      terminationGracePeriodSeconds: 10
      volumes:
        - name: config
          hostPath:
            path: "/mnt/bigboy/home/thies/help/Privatfotos fuÌˆr Photoprism"