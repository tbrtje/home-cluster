---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: nextcloud
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://nextcloud.github.io/helm/
      chart: nextcloud
      version: 2.14.6
      sourceRef:
        kind: HelmRepository
        name: nextcloud-charts
        namespace: flux-system
  values:
    ## Official nextcloud image version
    ## ref: https://hub.docker.com/r/library/nextcloud/tags/
    ##
    image:
      repository: nextcloud
      tag: production
      pullPolicy: IfNotPresent
    # Number of replicas to be deployed
    replicaCount: 1
    ## Allowing use of ingress controllers
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
    ##
    ingress:
      enabled: false

    nextcloud:
      host: cloud.${SECRET_DOMAIN}
      username: admin
      password: ${NEXTCLOUD_ADMIN_PW}
      update: 0
      mail:
        enabled: false
      # PHP Configuration files
      # Will be injected in /usr/local/etc/php/conf.d for apache image and in /usr/local/etc/php-fpm.d when nginx.enabled: true
      phpConfigs: { }
      # Default config files
      # IMPORTANT: Will be used only if you put extra configs, otherwise default will come from nextcloud itself
      # Default confgurations can be found here: https://github.com/nextcloud/docker/tree/master/16.0/apache/config
      defaultConfigs:
        # To protect /var/www/html/config
        .htaccess: true
        # Redis default configuration
        redis.config.php: true
        # Apache configuration for rewrite urls
        apache-pretty-urls.config.php: true
        # Define APCu as local cache
        apcu.config.php: true
        # Apps directory configs
        apps.config.php: true
        # Used for auto configure database
        autoconfig.php: true
        # SMTP default configuration
        smtp.config.php: true
      # Extra config files created in /var/www/html/config/
      # ref: https://docs.nextcloud.com/server/15/admin_manual/configuration_server/config_sample_php_parameters.html#multiple-config-php-file
      configs:
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' => ["172.0.0.0/8", "10.0.0.0/24"],
            'overwritehost'     => 'cloud.${SECRET_DOMAIN}',
            'overwriteprotocol' => 'https',
          );
      # For example, to use S3 as primary storage
      # ref: https://docs.nextcloud.com/server/13/admin_manual/configuration_files/primary_storage.html#simple-storage-service-s3
      #
      #  configs:
      #    s3.config.php: |-
      #      <?php
      #      $CONFIG = array (
      #        'objectstore' => array(
      #          'class' => '\\OC\\Files\\ObjectStore\\S3',
      #          'arguments' => array(
      #            'bucket'     => 'my-bucket',
      #            'autocreate' => true,
      #            'key'        => 'xxx',
      #            'secret'     => 'xxx',
      #            'region'     => 'us-east-1',
      #            'use_ssl'    => true
      #          )
      #        )
      #      );

      ## Strategy used to replace old pods
      ## IMPORTANT: use with care, it is suggested to leave as that for upgrade purposes
      ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
      strategy:
        type: Recreate
        # type: RollingUpdate
        # rollingUpdate:
        #   maxSurge: 1
        #   maxUnavailable: 0

      ##
      ## Extra environment variables
      extraEnv:
      #  - name: SOME_SECRET_ENV
      #    valueFrom:
      #      secretKeyRef:
      #        name: nextcloud
      #        key: secret_key

      # Extra mounts for the pods. Example shown is for connecting a legacy NFS volume
      # to NextCloud pods in Kubernetes. This can then be configured in External Storage
      extraVolumes:
        - name: nfs
          nfs:
            server: "192.168.178.101"
            path: "/mnt/bigboy/Media"
            readOnly: true
      extraVolumeMounts:
        - name: nfs
          mountPath: "/Medien"

      # Extra secuurityContext parameters. For example you may need to define runAsNonRoot directive
      # extraSecurityContext:
      #   runAsUser: "33"
      #   runAsGroup: "33"
      #   runAsNonRoot: true
      #   readOnlyRootFilesystem: true

    internalDatabase:
      enabled: false

    ##
    ## External database configuration
    ##
    externalDatabase:
      enabled: true
      ## Supported database engines: mysql or postgresql
      type: mysql
      ## Database host
      host: db-haproxy.db
      ## Database user
      user: root
      ## Database password
      password: ${PERCONA_DB_ROOT}
      ## Database name
      database: nextcloud

    redis:
      enabled: true
      usePassword: false

    ## Cronjob to execute Nextcloud background tasks
    ## ref: https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/background_jobs_configuration.html#webcron
    ##
    cronjob:
      enabled: true
      schedule: "*/5 * * * *"
      annotations: { }
      curlInsecure: true
      failedJobsHistoryLimit: 5
      successfulJobsHistoryLimit: 2

    service:
      type: ClusterIP
      port: 80
      loadBalancerIP: 192.168.178.71

    ## Enable persistence using Persistent Volume Claims
    ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    persistence:
      # Nextcloud Data (/var/www/html)
      enabled: true
      annotations: { }
      existingClaim: nextcloud-config

    resources: { }
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
    #  cpu: 100m
    #  memory: 128Mi

    ## Liveness and readiness probe values
    ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    startupProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1


    ## Enable pod autoscaling using HorizontalPodAutoscaler
    ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
    ##
    hpa:
      enabled: false
      cputhreshold: 60
      minPods: 1
      maxPods: 10

    nodeSelector: { }

    tolerations: [ ]

    affinity: { }


    ## Prometheus Exporter / Metrics
    ##
    metrics:
      enabled: false

      replicaCount: 1
      # The metrics exporter needs to know how you serve Nextcloud either http or https
      https: false
      timeout: 5s

      image:
        repository: xperimental/nextcloud-exporter
        tag: v0.4.0
        pullPolicy: IfNotPresent

      ## Metrics exporter resource requests and limits
      ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
      ##
      # resources: {}

      ## Metrics exporter pod Annotation and Labels
      # podAnnotations: {}

      # podLabels: {}

      service:
        type: ClusterIP
        ## Use serviceLoadBalancerIP to request a specific static IP,
        ## otherwise leave blank
        # loadBalancerIP:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "9205"
        labels: { }

    rbac:
      enabled: false
      serviceaccount:
        create: true
        name: nextcloud-serviceaccount
